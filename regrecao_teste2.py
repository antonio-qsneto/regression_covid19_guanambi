# -*- coding: utf-8 -*-
"""regrecao_teste2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v7Ay-inzZ2gPAD3JI8Z3qWPNylUFO8iW

# Predição de casos de Covid-19 para a cidade de Guanambi
Dataset: https://brasil.io/dataset/covid19/caso_full/?search=&epidemiological_week=&date=&order_for_place=&state=&city=Guanambi&city_ibge_code=&place_type=city&last_available_date=&is_last=&is_repeated=False
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

dataset = pd.read_csv('/content/covid19-d71f6e63a8e44afc97651234b95642de.csv')

X = dataset.iloc[:,[2]].values.astype(float)
y = dataset.iloc[:,[7]].values.astype(float)

from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
sc_y = StandardScaler()
X = sc_X.fit_transform(X)
y = sc_y.fit_transform(y)

from sklearn.svm import SVR
regressor = SVR(kernel='rbf')
regressor.fit(X,y)

plt.scatter(X, y, color = 'magenta')
plt.plot(X, regressor.predict(X), color = 'green')
plt.title('Truth or Bluff (Support Vector Regression Model)')
plt.xlabel('dia')
plt.ylabel('Casos')
plt.show()

"""#5 Prevendo novos resultados"""

# Aqui prevemos os próximos resultados informando o numero relativo ao dia conrrespondente a tabela. Nesse caso 463 corresponde ao dia 2021-07-29
y_pred = sc_y.inverse_transform((regressor.predict(sc_X.transform(np.array([[469]])))))

# A saída dará a previsão de numero de infectados para a cidade de Guanambi
y_pred

